#!/usr/bin/env python

"""Merge reads that support the same STR.

    usage:
        merge_STR_reads [options] klength reads.str.fq

    where the options are:
        -h,--help : print usage and quit
        -d,--debug: print debug information
        -v,--version: print version and quit
        -x,--min_threshold: discard blocks with < min_threshold reads [3]
        -y,--max_threshold: discard blocks with > max_threshold reads.[10000]
        -p,--numprocesses: use these number of processes. [2]
        -s,--chunksize: each process should be assigned chunk of reads. [100000]

    klength refers to the kmer length to be used.
    reads.str.fq refers to the fastq file with reads that have STR's (in most
    cases this is the output from select_STR_reads.

    Notes:
    a) This script assumes that the fastq quality values in the input file are
       in Sanger format.
    b) The kmer length in this module should be <= the size of the flanks in the
       input file reads.str.fq (which would be at least equal to the value of
       the argument -f for select_STR_reads)
    c) The arguments min_threshold and max_threshold should be set to ignore
       reads that have a lot of errors or are in regions which are large repeats
       and would be difficult to untangle.
"""

from sys import argv, stderr, stdin, exit, stdout
from getopt import getopt, GetoptError

from merge_STR_reads import *

__author__ = "Aakrosh Ratan"
__email__  = "ratan@bx.psu.edu"

# Do we want the debug information to be printed?
debug_flag = False

# A percent identity threshold. 
pid_threshold = 90

if __name__ == "__main__":
    try:
        opts, args = getopt(argv[1:], "hdvx:y:p:s:",["help", "debug", "version", "min_threshold=", "max_threshold=", "numprocesses=", "chunksize="])
    except GetoptError, err:
        print str(err)
        print >> stderr, __doc__
        exit(2) 

    min_threshold = 2
    max_threshold = 10000
    print_version = False
    num_processes = 2
    chunk_size = 100000

    for o, a in opts:
        if o in ("-h", "--help"):
            print >> stderr, __doc__
            exit()
        elif o in ("-d", "--debug"):
            debug_flag = True
        elif o in ("-x", "--min_threshold"):
            min_threshold = int(a)
        elif o in ("-y", "--max_threshold"):
            max_threshold = int(a)
        elif o in ("-v", "--version"):
            print_version = True
        elif o in ("-p", "--numprocesses"):
            num_processes = int(a)
        elif o in ("-s", "--chunksize"):
            chunk_size = int(a)
        else:
            assert False, "unhandled option"

    # Do we want to print the version and quit?
    if print_version == True:
        print >> stderr, "Program: merge_STR_reads"
        print >> stderr, "Version: 0.3 released 20160217"
        print >> stderr, "Contact: Aakrosh Ratan (ratan@bx.psu.edu)"
        exit(0)

    if len(args) != 2:
        print >> stderr, __doc__
        exit(3)

    merge_str_reads(int(args[0]), args[1], min_threshold, max_threshold, 
                        pid_threshold, debug_flag, num_processes, chunk_size)
